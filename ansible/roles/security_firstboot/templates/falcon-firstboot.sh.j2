#!/usr/bin/env bash
# {{ ansible_managed | comment }}
set -euo pipefail

STATE_DIR="/var/lib/security-firstboot"
MARKER="${STATE_DIR}/falcon.done"
mkdir -p "$STATE_DIR"

: "${FALCON_CID:=}"
FALCON_DEB_URL="${FALCON_DEB_URL:-{{ falcon_sensor_deb_url }}}"
FALCON_RPM_URL="${FALCON_RPM_URL:-{{ falcon_sensor_rpm_url }}}"

[[ -f "$MARKER" ]] && exit 0

installed=false
if command -v dpkg >/dev/null 2>&1; then
  if [[ -n "$FALCON_DEB_URL" ]]; then
    echo "Falcon: installing DEB…"
    curl -fsSL "$FALCON_DEB_URL" -o /tmp/falcon.deb
    apt-get update -y || true
    apt-get -y install /tmp/falcon.deb && installed=true || true
  fi
else
  if [[ -n "$FALCON_RPM_URL" ]]; then
    echo "Falcon: installing RPM…"
    curl -fsSL "$FALCON_RPM_URL" -o /tmp/falcon.rpm
    (dnf -y install /tmp/falcon.rpm || yum -y install /tmp/falcon.rpm) && installed=true || true
  fi
fi

if [[ "$installed" == true ]]; then
  # Configure CID if provided
  if [[ -n "$FALCON_CID" && -x /opt/CrowdStrike/falconctl ]]; then
    /opt/CrowdStrike/falconctl -s --cid="$FALCON_CID" || true
  fi
  systemctl enable --now falcon-sensor.service 2>/dev/null || true
  touch "$MARKER"
  echo "Falcon: installed."
else
  echo "Falcon: no package URL or install failed; skipping."
fi

exit 0

