#!/usr/bin/env bash
# {{ ansible_managed | comment }}
set -euo pipefail

STATE_DIR="/var/lib/security-firstboot"
MARKER="${STATE_DIR}/rapid7.done"
mkdir -p "$STATE_DIR"

: "${RAPID7_TOKEN:=}"
: "${RAPID7_ATTRIBUTES:=Library Systems}"

# Allow overrides via env; fall back to template defaults
R7_DEB_URL="${RAPID7_DEB_URL:-{{ rapid7_deb_url }}}"
R7_RPM_URL="${RAPID7_RPM_URL:-{{ rapid7_rpm_url }}}"
R7_RPM_PUBKEY="{{ rapid7_rpm_pubkey }}"

[[ -f "$MARKER" ]] && exit 0

if [[ -z "$RAPID7_TOKEN" ]]; then
  echo "Rapid7: no RAPID7_TOKEN; skipping."
  exit 0
fi

installed=false
if command -v dpkg >/dev/null 2>&1; then
  if [[ -n "$R7_DEB_URL" ]]; then
    echo "Rapid7: installing DEB…"
    curl -fsSL "$R7_DEB_URL" -o /tmp/rapid7.deb
    apt-get update -y || true
    apt-get -y install /tmp/rapid7.deb && installed=true || true
  fi
else
  if [[ -n "$R7_RPM_URL" ]]; then
    echo "Rapid7: installing RPM…"
    curl -fsSL "$R7_RPM_PUBKEY" | rpm --import -
    curl -fsSL "$R7_RPM_URL" -o /tmp/rapid7.rpm
    (dnf -y install /tmp/rapid7.rpm || yum -y install /tmp/rapid7.rpm) && installed=true || true
  fi
fi

if [[ "$installed" == true ]]; then
  # If the agent provides a configure script, call it with token/attributes (optional)
  if [[ -x /opt/rapid7/ir_agent/ir_agent* ]] && command -v /opt/rapid7/ir_agent/ir_agent &>/dev/null; then
    echo "Rapid7: agent installed; enabling…"
  fi
  systemctl enable --now ir_agent.service 2>/dev/null || true
  touch "$MARKER"
  echo "Rapid7: installed."
else
  echo "Rapid7: no package URL available or install failed; skipping."
fi

exit 0

